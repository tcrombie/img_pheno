geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw()
ggplot(proc_dat) +
aes(x = well, y = integrated_intensity, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Integrated intensity (AU)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
proc_dat <- dat %>%
dplyr::group_by(num) %>%
dplyr::mutate(mean_int = mean(int),
well = ifelse(num==1, "A02", "A11"),
integrated_intensity = int,
norm_int = int/area) %>%
dplyr::ungroup()
ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Integrated intensity (AU)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity (integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity /n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
full <- cowplot::plot_grid(intensity, norm_intensity)
intensity <- ggplot(proc_dat) +
aes(x = well, y = integrated_intensity, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Integrated intensity (AU)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
full <- cowplot::plot_grid(intensity, norm_intensity)
full
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21, outlier.shape = NA) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot(outlier.shape = NA) +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
full <- cowplot::plot_grid(intensity, norm_intensity)
full
intensity <- ggplot(proc_dat) +
aes(x = well, y = integrated_intensity, fill = area) +
geom_boxplot() +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Integrated intensity (AU)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.position = "none",
strip.text.x = element_text(size = 12, colour = "black"))
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot(outlier.shape = NA) +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
full <- cowplot::plot_grid(intensity, norm_intensity)
full
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot(outlier.shape = NA) +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
norm_intensity
full
full <- cowplot::plot_grid(intensity, norm_intensity, rel_widths = c(0.75,1))
full
full <- cowplot::plot_grid(intensity, norm_intensity, rel_widths = c(0.66,1))
full
full <- cowplot::plot_grid(intensity, norm_intensity, rel_widths = c(0.7,1))
full
ggsave('full_plot.pdf', width = 7.5, height = 5)
norm_intensity <- ggplot(proc_dat) +
aes(x = well, y = norm_int, fill = area) +
geom_boxplot(outlier.shape = NA) +
scale_fill_viridis() +
geom_jitter(width = .2, alpha = .5, size =4, pch = 21) +
theme_bw() +
labs(fill = "worm area", x = "Well", y = "Normalize intensity\n(integrated intensity / worm area)") +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black"),
strip.text.x = element_text(size = 12, colour = "black"))
norm_intensity
ggsave('norm_intensity_plot.pdf', width = 5, height = 5)
ggsave('norm_intensity_plot.png', width = 5, height = 5)
getwd()
ww_df <- data.table::fread('~/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data//Users/tim/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data/2019-05-24_AllDataLongFormat.csv', header = T)
ww_df <- data.table::fread('~/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data//Users/tim/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data/2019-05-24_AllDataLongFormat.csv', header = T)
getwd()
ww_df <- data.table::fread('~/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data/20190430_wormwatcher_1.csv', header = T)
ww_df <- data.table::fread('~/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data/2019-05-24_AllDataLongFormat.csv', header = T)
lm_df <- data.table::fread('~/Dropbox/AndersenLab/LabFolders/Tim/projects/WorMotel/data/CeNDR_lifespans.csv', header = T)
H2.test.boot <- function(data, indicies){
d <- data[indicies,]
pheno <- as.data.frame(dplyr::select(d, phenotype))[,1]
strain <- as.factor(d$strain)
reffMod <- lme4::lmer(pheno ~ 1 + (1|strain))
Variances <- as.data.frame(lme4::VarCorr(reffMod, comp = "Variance"))
Vg <- Variances$vcov[1]
Ve <- Variances$vcov[2]
H2 <- Vg/(Vg+Ve)
# errors <- sqrt(diag(lme4::VarCorr(reffMod, comp = "Variance")$strain))
return(H2)
}
H2.test <- function(data){
pheno <- as.data.frame(dplyr::select(data, phenotype))[,1]
strain <- as.factor(data$strain)
reffMod <- lme4::lmer(pheno ~ 1 + (1|strain))
Variances <- as.data.frame(lme4::VarCorr(reffMod, comp = "Variance"))
Vg <- Variances$vcov[1]
Ve <- Variances$vcov[2]
H2 <- Vg/(Vg+Ve)
# errors <- sqrt(diag(lme4::VarCorr(reffMod, comp = "Variance")$strain))
return(H2)
}
H2.calc <- function(df, boot = T){
if(boot == T){
# bootstrapping with 1000 replications
results <- boot(data=df, statistic=H2.test.boot, R=500)
# get 95% confidence interval
ci <- boot.ci(results, type="bca")
H2_errors <- data.frame(H2 = ci$t0, ci_l = ci$bca[4], ci_r = ci$bca[5])
return(H2_errors)
} else {
H2 <- data.frame(H2 = H2.test(data = df), ci_l = NA, ci_r = NA)
return(H2)
}
}
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
View(ww_df)
ww_df_proc <- ww_df %>%
dplyr::rename( strain = Strain,
Plate_Num = `Plate Num`,
ls = `Lifespan est (days)`,
hs = `Healthspan est (days)`,
t = `Time (days)`,
act = `Activity (a.u.)`) %>%
dplyr::distinct(Plate_Num, Plate_Name, strain, Well_Num, .keep_all = T) %>%
dplyr::filter(ls != "NaN") %>%
#dplyr::mutate(indicies = seq(1, length(t), by = 1)) %>%
dplyr::group_by(strain) %>%
dplyr::mutate(reps = n(),
median_ls = median(ls),
median_hs = median(hs)) %>%
dplyr::ungroup() %>%
tidyr::gather(trait, phenotype, -Plate_Num, -Plate_Name, -Well_Num, -strain, -t, -act, -reps, -median_ls, -median_hs) %>%
dplyr::arrange(median_hs)
library(ggplot2)
library(dplyr)
library(viridis)
library(boot)
ww_df_proc <- ww_df %>%
dplyr::rename( strain = Strain,
Plate_Num = `Plate Num`,
ls = `Lifespan est (days)`,
hs = `Healthspan est (days)`,
t = `Time (days)`,
act = `Activity (a.u.)`) %>%
dplyr::distinct(Plate_Num, Plate_Name, strain, Well_Num, .keep_all = T) %>%
dplyr::filter(ls != "NaN") %>%
#dplyr::mutate(indicies = seq(1, length(t), by = 1)) %>%
dplyr::group_by(strain) %>%
dplyr::mutate(reps = n(),
median_ls = median(ls),
median_hs = median(hs)) %>%
dplyr::ungroup() %>%
tidyr::gather(trait, phenotype, -Plate_Num, -Plate_Name, -Well_Num, -strain, -t, -act, -reps, -median_ls, -median_hs) %>%
dplyr::arrange(median_hs)
View(ww_df_proc)
ww_df_proc_outliers_removed <- ww_df_proc %>%
dplyr::group_by(strain, trait) %>%
dplyr::mutate(phenotype = remove_outliers(phenotype)) %>%
dplyr::ungroup() %>%
dplyr::filter(!is.na(phenotype))
ww_df_proc <- ww_df_proc %>%
dplyr::group_by(strain, trait) %>%
dplyr::mutate(outlier = (remove_outliers(phenotype)),
outlier = ifelse(is.na(outlier), TRUE, FALSE)) %>%
dplyr::ungroup()
ww_df_H2_ls <- ww_df_proc %>%
dplyr::filter(trait == "ls")
ww_df_H2_hs <- ww_df_proc %>%
dplyr::filter(trait == "hs")
ww_df_H2_ls_outliers_removed <- ww_df_proc_outliers_removed %>%
dplyr::filter(trait == "ls")
ww_df_H2_hs_outliers_removed <- ww_df_proc_outliers_removed %>%
dplyr::filter(trait == "hs")
ww_ls_h2 <- H2.calc(ww_df_H2_ls, boot = T)
ww_hs_h2 <- H2.calc(ww_df_H2_hs, boot = T)
ww_ls_h2_outliers_removed <- H2.calc(ww_df_H2_ls_outliers_removed, boot = T)
ww_hs_h2_outliers_removed <- H2.calc(ww_df_H2_hs_outliers_removed, boot = T)
View(ww_hs_h2)
ww_ls_h2_full <- bind_rows(ww_ls_h2, ww_ls_h2_outliers_removed) %>%
dplyr::mutate(trait = as.factor(c("WW_LS","WW_LS no outliers")))
ww_hs_h2_full <- bind_rows(ww_hs_h2, ww_hs_h2_outliers_removed) %>%
dplyr::mutate(trait = as.factor(c("WW_HS","WW_HS no outliers")))
ww_ls_h2_plot <- ggplot(ww_ls_h2_full) +
geom_point(aes(x = trait, y = H2), size = 3) +
geom_errorbar(aes(ymin=ci_l, ymax=ci_r, x = trait), colour="black", width=0.05) +
labs(x = "", y = "Heritability") +
ylim(0, 1) +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ww_hs_h2_plot <- ggplot(ww_hs_h2_full) +
geom_point(aes(x = trait, y = H2), size = 3) +
geom_errorbar(aes(ymin=ci_l, ymax=ci_r, x = trait), colour="black", width=0.05) +
labs(x = "", y = "Heritability") +
ylim(0, 1) +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ww_design <- ww_df_proc %>%
dplyr::mutate(row = ifelse(Well_Num %in% c(1:6), "A",
ifelse(Well_Num %in% c(7:12), "B",
ifelse(Well_Num %in% c(13:18), "C", "D"))),
column = ifelse(Well_Num %in% c(1,7,13,19), 1,
ifelse(Well_Num %in% c(2,8,14,20), 2,
ifelse(Well_Num %in% c(3,9,15,21), 3,
ifelse(Well_Num %in% c(4,10,16,22), 4,
ifelse(Well_Num %in% c(5,11,17,23), 5, 6))))))
ww_design_plot <- ggplot(ww_design %>% dplyr::filter(trait == "ls")) +
aes(x = column, y = row) +
geom_tile(aes(fill = as.numeric(phenotype))) +
geom_text(aes(label=strain), size = 2) +
facet_wrap(~Plate_Name) +
theme_bw() +
scale_fill_viridis(name="") +
labs(x="", y="")
ww_design_plot
median_ls_order <- c("DL238",   "N2", "JU775",
"MY16",    "CX11314", "ED3017",
"LKC34",   "JU258",   "JT11398",
"CB4856",  "EG4725", "MY23")
median_hs_order <- c("JU775",   "DL238",   "N2",
"JU258",   "ED3017",  "JT11398",
"CX11314", "MY16",    "LKC34",
"CB4856",  "MY23",    "EG4725")
ww_ls <- ggplot(ww_df_proc %>% dplyr::filter(trait == "ls")) +
aes(x=factor(strain, levels = median_ls_order), y=phenotype, fill=strain) +
scale_fill_manual(values = strain.colours) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = 21) +
labs(x="", y="WW_Lifespan") +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ww_hs <- ggplot(ww_df_proc %>% dplyr::filter(trait == "hs")) +
aes(x=factor(strain, levels = median_hs_order), y=phenotype, fill=strain) +
scale_fill_manual(values = strain.colours) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = 21) +
labs(x="", y="WW_Healthspan") +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
full_ww <- cowplot::plot_grid(ww_ls, ww_ls_h2_plot, ww_hs, ww_hs_h2_plot,
rel_widths = c(1, .25), ncol = 2, align = "vh", labels = c("A","", "B",""))
full_ww
strain.colours <- c("DL238"="gold2", "N2"="plum4","JU775"= "darkorange1",
"MY16"="lightskyblue2", "CX11314"="firebrick","ED3017"= "burlywood3", "LKC34"="gray51",
"JU258"="springgreen4", "JT11398"="lightpink2", "CB4856"="deepskyblue4",
"MY23"="mediumpurple4","EG4725"= "chocolate")
median_ls_order <- c("DL238",   "N2", "JU775",
"MY16",    "CX11314", "ED3017",
"LKC34",   "JU258",   "JT11398",
"CB4856",  "EG4725", "MY23")
median_hs_order <- c("JU775",   "DL238",   "N2",
"JU258",   "ED3017",  "JT11398",
"CX11314", "MY16",    "LKC34",
"CB4856",  "MY23",    "EG4725")
ww_ls <- ggplot(ww_df_proc %>% dplyr::filter(trait == "ls")) +
aes(x=factor(strain, levels = median_ls_order), y=phenotype, fill=strain) +
scale_fill_manual(values = strain.colours) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = 21) +
labs(x="", y="WW_Lifespan") +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ww_hs <- ggplot(ww_df_proc %>% dplyr::filter(trait == "hs")) +
aes(x=factor(strain, levels = median_hs_order), y=phenotype, fill=strain) +
scale_fill_manual(values = strain.colours) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = 21) +
labs(x="", y="WW_Healthspan") +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
full_ww <- cowplot::plot_grid(ww_ls, ww_ls_h2_plot, ww_hs, ww_hs_h2_plot,
rel_widths = c(1, .25), ncol = 2, align = "vh", labels = c("A","", "B",""))
full_ww
ww_hs
ww_ls <- ggplot(ww_df_proc %>% dplyr::filter(trait == "ls")) +
aes(x=factor(strain, levels = median_ls_order), y=phenotype, fill=strain) +
scale_fill_manual(values = strain.colours) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = 21) +
labs(x="", y="WW_Lifespan") +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ww_ls
View(ww_df_proc)
ww_ls
install.packages("correlateR")
devtools::install_github("AEBilgrau/correlateR")
correlateR
tidyverse
devtools::install_github("AEBilgrau/correlateR")
packageVersion("rrBLUP")
install.packages("Sommer")
install.packages("sommer")
install_version("sommer", version = "3.5.0", repo = https://github.com/cran/sommer)
install_version("sommer", version = "3.5.0", repos = https://github.com/cran/sommer)
shiny::runApp('repos/img_pheno/scripts')
runApp('repos/img_pheno/scripts')
runApp('repos/img_pheno/scripts')
runApp('repos/img_pheno/scripts')
key <- df %>% dplyr::filter(Metadata_Plate == input$plates) %>% dplyr::distinct(Metadata_Well)
runApp('repos/img_pheno/scripts')
key <- df %>% dplyr::filter(Metadata_Plate == 1) %>% dplyr::distinct(Metadata_Well)
key <- df %>% dplyr::filter(Metadata_Plate == 1) %>% dplyr::distinct(Metadata_Well)
library(tidyverse)
library(shiny)
library(png)
library(platetools)
library(viridis)
library(plotly)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
load('data/proc_pheno.Rda')
df <- worm_dat_proc %>%
dplyr::filter(strain == "N2",
Metadata_Plate == 1)
wells <- df %>%
dplyr::distinct(Metadata_Plate, Metadata_Well, .keep_all = TRUE)
key <- df %>% dplyr::filter(Metadata_Plate == 1) %>% dplyr::distinct(Metadata_Well)
View(key)
key[,2]
View(key)
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v2.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v3.R')
runApp('scripts/app_v4.R')
runApp('scripts/app_v4.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v4.R')
runApp('scripts/app_v5.R')
View(worm_dat_proc)
View(worm_dat_proc)
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
runApp('scripts/app_v5.R')
